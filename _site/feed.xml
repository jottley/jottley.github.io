

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Jared Ottley</title>
  <subtitle>Alfresco, "Principal Engineer", Fatherhood, Philosophy, Coaching, Lacrosse</subtitle>
  <updated>2025-09-07T17:29:39-06:00</updated>
  <author>
    <name>Jared Ottley</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator>
  <rights> © 2025 Jared Ottley </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Alfresco&amp;#58; CMIS Browser Binding DELETE example</title>
    <link href="http://localhost:4000/alfresco/alfresco-cmis-browser-binding-delete" rel="alternate" type="text/html" title="Alfresco&amp;amp;#58; CMIS Browser Binding DELETE example" />
    <published>2014-04-14T00:00:00-06:00</published>
  
    <updated>2014-04-14T00:00:00-06:00</updated>
  
    <id>http://localhost:4000/alfresco/alfresco-cmis-browser-binding-delete</id>
    <content type="text/html" src="http://localhost:4000/alfresco/alfresco-cmis-browser-binding-delete" />
    <author>
      <name>jared</name>
    </author>

  
    
    <category term="Alfresco" />
    
  

  <summary>I’m in the midst of rewriting a CMIS client. We are moving from CMIS 1.0 atompub bindings to CMIS 1.1 browser bindings. I’ve worked out how to do a DELETE and wanted to document an example that others could extrapolate from.  A browser binding DELETE should follow the model of a form POST according to the documentation. Playing around with the provided examples (there were no DELETE examples th...</summary>

  </entry>

  
  <entry>
    <title>Alfresco: Property Decorators &amp;#8212; cont.</title>
    <link href="http://localhost:4000/alfresco/alfresco-property-decorators-cont" rel="alternate" type="text/html" title="Alfresco: Property Decorators &amp;amp;#8212; cont." />
    <published>2012-04-02T00:00:00-06:00</published>
  
    <updated>2012-04-02T00:00:00-06:00</updated>
  
    <id>http://localhost:4000/alfresco/alfresco-property-decorators-cont</id>
    <content type="text/html" src="http://localhost:4000/alfresco/alfresco-property-decorators-cont" />
    <author>
      <name>jared</name>
    </author>

  
    
    <category term="Alfresco" />
    
  

  <summary>In my post on Property Decorators I pointed out that there was an issue adding a customer property decorator: you couldn’t create a custom bean to perform the mapping and had to overwrite the out of the box bean. Well Mike Hatfield has found a solution which is just awesome: Map Merge.  It is possible to merge maps of a child bean to a parent bean. Here is how it is done: Create a new bean, whe...</summary>

  </entry>

  
  <entry>
    <title>Alfresco: Simple Workflow Web Scripts</title>
    <link href="http://localhost:4000/alfresco/alfresco-simple-workflow-web-scripts" rel="alternate" type="text/html" title="Alfresco: Simple Workflow Web Scripts" />
    <published>2012-04-01T00:00:00-06:00</published>
  
    <updated>2012-04-01T00:00:00-06:00</updated>
  
    <id>http://localhost:4000/alfresco/alfresco-simple-workflow-web-scripts</id>
    <content type="text/html" src="http://localhost:4000/alfresco/alfresco-simple-workflow-web-scripts" />
    <author>
      <name>jared</name>
    </author>

  
    
    <category term="Alfresco" />
    
  

  <summary>Continuing on from my previous post on Simple Workflows let’s look at using the Simple Workflow model in a few web scripts.  The first web script will add a simple workflow to a node. The second will allow us to signal the transition of accept or reject on that node.  Add a Workflow  As discussed in the previous post, a simple workflow is made up of two paths: accept or reject with a copy or mo...</summary>

  </entry>

  
  <entry>
    <title>Alfresco: Simple Workflow</title>
    <link href="http://localhost:4000/alfresco/alfresco-simple-workflow" rel="alternate" type="text/html" title="Alfresco: Simple Workflow" />
    <published>2012-03-31T00:00:00-06:00</published>
  
    <updated>2012-03-31T00:00:00-06:00</updated>
  
    <id>http://localhost:4000/alfresco/alfresco-simple-workflow</id>
    <content type="text/html" src="http://localhost:4000/alfresco/alfresco-simple-workflow" />
    <author>
      <name>jared</name>
    </author>

  
    
    <category term="Alfresco" />
    
  

  <summary>When I worked on the sales side at Alfresco, one of the easiest things to demo was a simple workflow. It was usually something that enabled the prospect to tick off a major requirement on their long list of things that the solution they were looking for needed. Alfresco has two kinds of workflow: simple and for lack of a better word advanced. Advanced workflows usually require some level of bus...</summary>

  </entry>

  
  <entry>
    <title>Alfresco: Scheduled Jobs</title>
    <link href="http://localhost:4000/alfresco/alfresco-scheduled-jobs" rel="alternate" type="text/html" title="Alfresco: Scheduled Jobs" />
    <published>2012-02-21T00:00:00-07:00</published>
  
    <updated>2012-02-21T00:00:00-07:00</updated>
  
    <id>http://localhost:4000/alfresco/alfresco-scheduled-jobs</id>
    <content type="text/html" src="http://localhost:4000/alfresco/alfresco-scheduled-jobs" />
    <author>
      <name>jared</name>
    </author>

  
    
    <category term="Alfresco" />
    
  

  <summary>Note: @tommoz has pointed out to me a blog post that I’d never seen before from @Ixxus which is a complete example of writing a scheduled job (spring beans and all). You should really check out their excellent example if you need a full example of writing scheduled jobs for Alfresco.  One of the things that is easy to forget when adding/writing a new scheduled jobs is to wrap your code in a Ret...</summary>

  </entry>

</feed>


